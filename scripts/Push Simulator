if game.Players.LocalPlayer.PlayerGui.UI.HUD:FindFirstChild("Offers") then game.Players.LocalPlayer.PlayerGui.UI.HUD.Offers:Destroy() end

function C() spawn(function () while getgenv().C do game:GetService("ReplicatedStorage").Remotes.PowerGain:FireServer() game:GetService("ReplicatedStorage").Remotes.PushGain:FireServer() task.wait() end end) end
function R() spawn(function () while getgenv().R do game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer() wait() end end) end
function H() spawn(function () while getgenv().H do local args = {[1] = "Hatch1",[2] = E,[3] = {}}game:GetService("ReplicatedStorage").Remotes.Hatch:FireServer(unpack(args)) wait() end end) end

local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wall%20v3')))()

local w = library:CreateWindow("Push Simulator")

local b = w:CreateFolder("Main")

b:Toggle("Inf. Power/Instant Kill",function(val) getgenv().C = val C() end)
b:Toggle("Inf. Rebirth",function(val) getgenv().R = val R() end)
b:Toggle("Hatch",function(val) getgenv().C = val C() end)

b:Dropdown("Select",{"Basic","Devious","Lava","Icey","Magma","Pirate","Viking","Ancient","Egypt","Snow","Frost","5M","Astro","Alien"},true,function(val)
E = val
end)

b:Label("Made by X_LuaF#0705",{TextSize = 21; TextColor = Color3.fromRGB(255,255,255); BgColor = Color3.fromRGB(38, 38, 38);})

local w = library:CreateWindow("LocalPlayer")

local b = w:CreateFolder("LP")

b:DestroyGui()

b:Button("Discord",function() setclipboard("workink.co/2GQ/LTD") end)
b:Button("Full Version",function() loadstring(game:HttpGet("https://pastebin.com/raw/GphZf9Xe", true))() end)
b:Button("Rejoin",function() loadstring(game:HttpGet("https://pastebin.com/raw/mM7JBG5h", true))() end)
b:Button("Reset",function() loadstring(game:HttpGet("https://pastebin.com/raw/EEY6SATj", true))() end)

b:Slider("WalkSpeed",{min = 0; max = 10000; precise = false;},function(val) game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = val end)
b:Slider("JumpPower",{min = 0; max = 10000; precise = false;},function(val) game.Players.LocalPlayer.Character.Humanoid.JumpPower = val end)
b:Slider("HipHeight",{min = 0; max = 10000; precise = false;},function(val) game.Players.LocalPlayer.Character.Humanoid.HipHeight = val end)
b:Slider("Gravity",{min = 0; max = 360; precise = false;},function(val) game.workspace.Gravity = val end)
b:Slider("FOV",{min = 0;max = 120;precise = false;},function(val) game.workspace.CurrentCamera.FieldOfView = val end)

function TPCFrame(Player_CFrame) if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Player_CFrame end end
function RTPCFrame(M_CF) if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then M_CF.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame end end
function PHP(Player_HP) if game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then game.Players.LocalPlayer.Character.Humanoid.Health = Player_HP end end
